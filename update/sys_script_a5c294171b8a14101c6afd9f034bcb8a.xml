<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_tekso_twxapp01_queue_check_for_timeout_expired</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Queue Check For Timeout Expired - Async</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
BR is triggered by SJ Process Responses From uControl

function checkfortimeoutexpired(job2sysID) {
	var job2sysID2 = job2sysID.toString();
	if (job2sysID2.length > 0) {
		var queueTable = 'x_tekso_twxapp01_queue_check_for_timeout_expired';
		var gr1 = new GlideRecordSecure(queueTable);
		gr1.initialize();
		gr1.setValue('scheduled_job2_log_record_sys_id',job2sysID2);
		gr1.insert();
		// Will trigger Async BR - Queue Check For Timeout Expired - Async
	}
}

*/

(function executeRule(current, previous /*null when async*/) {

	var sysID = current.sys_id;
	var queueTable = 'x_tekso_twxapp01_queue_check_for_timeout_expired';
	
	var gr1 = new GlideRecordSecure(queueTable);
	gr1.addQuery('sys_id',sysID);
	gr1.setLimit(1);
	gr1.query();
	if (gr1.next()) {
		var job2SysID = gr1.getValue('scheduled_job2_log_record_sys_id');
		var job2SysID2 = job2SysID.toString();

		var startedAt = new GlideDateTime();
		gr1.setValue('started_at',startedAt);
		gr1.setWorkflow(false);
		gr1.update();
		
		if (job2SysID2.length > 0) {
			new x_tekso_twxapp01.TimeoutExpired().checkForDataTimeout(job2SysID2);
		}
		
		var completedAt = new GlideDateTime();
		gr1.setValue('completed_at',completedAt);			
		gr1.setValue('processed',true);
		gr1.setWorkflow(false);
		gr1.update();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-07-21 21:01:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a5c294171b8a14101c6afd9f034bcb8a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Queue Check For Timeout Expired - Async</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_a5c294171b8a14101c6afd9f034bcb8a</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-07-27 10:09:06</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a5c294171b8a14101c6afd9f034bcb8a"/>
</record_update>
