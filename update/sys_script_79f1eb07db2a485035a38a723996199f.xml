<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_tekso_twxapp01_setup</collection>
        <condition>current.connection_test_requested.changesTo(true) </condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Setup When Connection Test Req Changes</name>
        <order>110</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
	// AFTER INSERT UPDATE
	// NEEDS TO RUN AFTER - BR Setup When MID Server Or URL Is Changed
	var sysID = current.sys_id;
	
	var midServerName = current.ucontrol_mid_server.name.toString();
	var midServerSysID = current.ucontrol_mid_server.sys_id.toString();
	var url = current.ucontrol_url.toString(); 		
	if (midServerName.length > 0 && midServerSysID.length > 0 && url.length > 0 ) {
		// Update the connection status - but we only need to do this if this BR has been triggered by a change to the URL or MID Server
		// If someohe has clicked on the Test Connection or Start Sending then connection status should have already been set correctly
		// This is needed if someone has changed the MID Server or URL and then hit the update button
		var setupTable = 'x_tekso_twxapp01_setup';
		var gr1 = new GlideRecord(setupTable);
		gr1.addQuery('sys_id',sysID); // sys_id for the setup record
		gr1.query();
		if (gr1.next()) {
			var connectionStatus = gr1.getValue('connection_status') || '';
			var connectionStatus2 = '';
			if (gr1.start_sending_requested == true) {
				connectionStatus2 = 'Sending Process Starting - Please Wait';
			}
			else {
				connectionStatus2 = 'Testing Connection - Please Wait';
			}
			
			if (connectionStatus != connectionStatus2) {
				gr1.setValue('connection_status',connectionStatus2);	
				gr1.update();			
			}
		}	

		// Check if there is already a record pending
		var connectionTestTable = 'x_tekso_twxapp01_connection_test';
		var gr2 = new GlideRecord(connectionTestTable);
		gr2.addQuery('setup_record',current.sys_id);
		gr2.addQuery('ucontrol_url',url);
		gr2.addQuery('ucontrol_mid_server_name',midServerName);
		gr2.addQuery('ucontrol_mid_server_sys_id',midServerSysID);	
		gr2.addQuery('status','Pending');
		gr2.query();
		if (!gr2.next()) {
			// There is not already a record pending
			var dtRequest = new GlideDateTime();

			// gets the user name
			var userName = gs.getUserName();

			// e.g. dev91664
			var snInstance = gs.getProperty("instance_name");	
			// e.g. https://dev91664.service-now.com/
			var snURL = gs.getProperty("glide.servlet.uri");

			var source = 'ServiceNow';

			var json = '{\"source\":\"' + source + '\",';	// ServiceNow
			json = json  + '\"source_name\":\"' + snInstance + '\",'; // ServiceNow Instance e.g. dev91664
			json = json + '\"source_url\":\"' + snURL + '\",'; // ServiceNow URL e.g. https://dev91664.service-now.com/
			json = json +  '\"date_sent\":\"' + dtRequest + '\",';	
			json = json + '\"user\":\"' + userName + '\"}'; // No comma at the end				

			var gdt = new GlideDateTime();
			var timeoutMinutes = current.ucontrol_connection_timeout_minutes;
			var timeoutSeconds = timeoutMinutes * 60;
			gdt.addSeconds(timeoutSeconds);
			
			var gr3 = new GlideRecord(connectionTestTable);
			gr3.initialize();
			gr3.setValue('status','Pending');
			gr3.setValue('setup_record',current.sys_id);
			gr3.setValue('ucontrol_url',url);
			gr3.setValue('ucontrol_mid_server_name',midServerName);
			gr3.setValue('ucontrol_mid_server_sys_id',midServerSysID);
			gr3.setValue('test_connection_triggered_by','BR Setup When Connection Test Req Changes');
			gr3.setValue('request_will_time_out_at',gdt);
			gr3.setValue('json_request_body',json);
			if (current.start_sending_requested == true) {
				gr3.setValue('start_sending_requested',true);				
			}
			else {
				gr3.setValue('start_sending_requested',false);
			}
			// An After INSERT BR on x_tekso_twxapp01_connection_test will be triggered		
			gr3.insert();						
		}
	}
})(current, previous);



]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-01-29 17:48:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>79f1eb07db2a485035a38a723996199f</sys_id>
        <sys_mod_count>76</sys_mod_count>
        <sys_name>Setup When Connection Test Req Changes</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_79f1eb07db2a485035a38a723996199f</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-03-23 10:47:01</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=79f1eb07db2a485035a38a723996199f"/>
</record_update>
