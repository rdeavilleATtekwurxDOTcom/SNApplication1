<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_tekso_twxapp01_connection_test</collection>
        <condition>current.status == 'Pending'</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Connection Test - Insert</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Only if status is Pending	

	var setupTable = 'x_tekso_twxapp01_setup';
	var queueTable = 'x_tekso_twxapp01_queue_connection_test';	
	// Put the sys_id for the x_tekso_twxapp01_connection_test record
	// back on to the x_tekso_twxapp01_setup
	var connectionTestSysID = current.sys_id; // sys_id for this record x_tekso_twxapp01_connection_test
	var connectionTestSysID2 = connectionTestSysID.toString();
	var setupSysID = current.setup_record; // sys_id for the setup reocrd x_tekso_twxapp01_setup
	var setupSysID2 = setupSysID.toString();
	
	if (setupSysID2.length > 0 && connectionTestSysID2.length > 0) {
		var gr1 = new GlideRecordSecure(setupTable);	
		gr1.addQuery('sys_id',setupSysID2); // sys_id for the setup record
		gr1.query();
		if (gr1.next()) {
			gr1.setValue('connection_test_link',connectionTestSysID2);
			gr1.setValue('updated_by_script','BR Connection Test - Insert'); // Debug
			gr1.update();
		}	

		var gr2 = new GlideRecordSecure(queueTable);
		gr2.initialize();
		gr2.setValue('connection_test_record_sys_id',connectionTestSysID2);		
		gr2.insert();
		//Will trigger BR - Queue Connection Test - Async
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-03-20 08:47:02</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>085fc86fdbaf0c104f29252b13961938</sys_id>
        <sys_mod_count>38</sys_mod_count>
        <sys_name>Connection Test - Insert</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_085fc86fdbaf0c104f29252b13961938</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-07-24 08:42:17</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=085fc86fdbaf0c104f29252b13961938"/>
</record_update>
