<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script><![CDATA[function onAbort() {
	// Don't need to do anything here - really
	// as this will trigger the processing script
	
	// These lines are not necessary
	GlideDialogWindow.get().destroy();
	return true;
}

function myTimer() {
	// This does not trigger the Processing Script
	
	// Call a client script to check if the connection_status is OK
	// if so - then call g_form.save()
	
	// Get the value from <input type="hidden" id="sysID" name="sysID" value="${sysparm_sysid}"/> 	
	var sysID = gel("sysID").value;
	
	// Use a script include to check the current connnection_status
	
	var ga = new GlideAjax('x_tekso_twxapp01.ClientReadSetupRecord');
	ga.addParam('sysparm_name','getConnectionStatus');
	ga.addParam("sysparm_sys_id", sysID);
	ga.getXML(callBack);

}

// This is the return from the script include
function callBack(response){
	var connectionStatus = response.responseXML.documentElement.getAttribute("answer");
	if (connectionStatus == 'OK' || connectionStatus == 'Failed') {
		g_form.save();
	}
	
	//If we have not aborted we need to check if the test connection has timed out
	// Get the value from <input type="hidden" id="sysID" name="sysID" value="${sysparm_sysid}"/> 	
	var sysID = gel("sysID").value;
	// Use a script include to check the current connnection_status
	var ga = new GlideAjax('x_tekso_twxapp01.ClientConnectionTestTimeout');
	ga.addParam('sysparm_name','checkForTimeout');
	ga.addParam("sysparm_sys_id", sysID);
	ga.getXML(); //This does not require a call back	
}

// Trigger myTimer every 1 second
// This will check to see if the connetion_status is now OK
// If so - it will call g_form.save
var myVar = setInterval(myTimer ,1000);]]></client_script>
        <description/>
        <direct>false</direct>
        <endpoint>x_tekso_twxapp01_sending_starting_please_wait.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
<style>
.aligncenter {
    text-align: center;
}
.button {
	color: #ffffff !important;
	background-color: #1f8476 !important;
	border-color: #10463f !important;
	border: 1px solid transparent !important;
}	
</style>
	
<g:ui_form>
	<input type="hidden" id="sysID" name="sysID" value="${sysparm_sysid}"/> 	
	<img src="logo1.jpg"/>
	<table border="0">		
	<tr>
		<td>
			<h3>Sending Processing is starting up.</h3>
		</td>
	</tr>							
	<tr>
		<td>
			<h3>Please wait for this to complete and for the form to reload.</h3>
		</td>
	</tr>		
	<tr>
		<td>
			<h3>This may take a few seconds.</h3>
		</td>
	</tr>		
	<tr>	
		<td>
	<p class="aligncenter">
		<img src="spinner.gif" width="256" height="256" alt="centered image" />
			</p>
		</td>
	</tr>	
	<tr id="dialogbuttons">
		<td align="center">
			<button class="button" type="submit" onclick="return onAbort();">Abort</button>			
		</td>
	</tr>		
	</table>	
</g:ui_form>	
</j:jelly>
]]></html>
        <name>sending_starting_please_wait</name>
        <processing_script><![CDATA[var setupTable = 'x_tekso_twxapp01_setup';
var gr1 = new GlideRecordSecure(setupTable);
gr1.addQuery('sys_id',sysID);
gr1.query();
if (gr1.next()) {
	// Get the sysID for the Connection Test Record from Setup - x_tekso_twxapp01_connection_test
	var connectionTestSysID = gr1.getValue('connection_test_link') || '';
	var gdt = new GlideDateTime();
	var usr = gs.getUserName();		
	gr1.setValue('connection_status','Failed');				
	gr1.setValue('connection_status_details','Sending Aborted At: ' + gdt.getDisplayValue() + ' By: ' + usr);
	gr1.setValue('start_sending_requested',false);
	gr1.setValue('connection_test_requested',false);	
	gr1.setValue('updated_by_script','UI Page sending_starting_please_wait'); // Debug
	gr1.update();
	
	// Set the status of the connection test record to Aborted
	var connectionTestTable = 'x_tekso_twxapp01_connection_test';
	var gr2 = new GlideRecordSecure(connectionTestTable);
	gr2.addQuery('setup_record',sysID);
	gr2.addQuery('sys_id',connectionTestSysID);
	gr2.query();
	if (gr2.next()) {
		gr2.setValue('status','Aborted');
		gr2.setValue('aborted',true);
		gr2.setValue('updated_by_script','UI Page sending_starting_please_wait'); // Debug
		gr2.update();
	}

	gr1.setValue('connection_test_link','');
	gr1.setValue('updated_by_script','UI Page sending_starting_please_wait'); // Debug
	gr1.update();
	
	var url = '/x_tekso_twxapp01_setup.do?sys_id=' + sysID;
	response.sendRedirect(url);	
}]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-03-18 18:26:40</sys_created_on>
        <sys_id>0621848bdbefc81041d08f38139619b2</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>sending_starting_please_wait</sys_name>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_ui_page_0621848bdbefc81041d08f38139619b2</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-06-25 14:43:08</sys_updated_on>
    </sys_ui_page>
</record_update>
