<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_tekso_twxapp01_test_configuration_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Test uControl Track Upd cmdb_ci</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Cannot be Async as we need the previous value to work out what has changed
	// After BR - this writes to x_tekso_twxapp01_cmdb_updates
	// Then there is an Async BR on x_tekso_twxapp01_cmdb_updates which is triggered on insert
	// BR uControl Track Updates
	var tblName = current.getTableName();
	
	var fieldsChanged = '';
	var allFields = '';
	var changeCnt = 0;
	var fieldCnt = 0;
	var fieldsChangedArr = [];
	var allFieldsArr = [];
	
	for (var x in current){
		var y = x.substring(0,15); // original_value_
		var z = x.substring(0,18); // alternative_value_
		// Exclude real_table_name and soft_delete and got_alternative_values for list of all fields
		var excludeArr = ['sys_meta','real_table_name','soft_delete','got_alternative_values','original_or_alternative'];
		if (excludeArr.indexOf(x) == -1 && y != 'original_value_' && z != 'alternative_value_') {	
			allFields.push(x);
			fieldCnt++;
		}
		
		// Exclude sys_updated_on, sys_updated_by and sys_mod_count and real_table_name and soft_delete from changes
		var excludeArr2 = [];
		excludeArr2.push('real_table_name');
		excludeArr2.push('soft_delete');
		excludeArr2.push('got_alternative_values');
		excludeArr2.push('original_or_alternative');
		excludeArr2.push('sys_updated_on');
		excludeArr2.push('sys_updated_by');
		excludeArr2.push('sys_mod_count');
		excludeArr2.push('sys_meta');
		if (excludeArr2.indexOf(x) == -1 && y != 'original_value_' && z != 'alternative_value_') {		
			if (current[x] != previous[x]) {
				fieldsChangedArr.push(x);
				changeCnt++;
			}
		}
	}

	if (fieldCnt > 0) {
		allFieldsArr.sort(); // Sort alphabetically
		allFields = allFieldsArr.join(","); // Convert to a comma separated list		
	}
	
	if (changeCnt > 0) {
		fieldsChangedArr.sort(); // Sort alphabetically
		fieldsChanged = fieldsChangedArr.join(",");	// Convert to a comma separated list	
		
		var gr1 = new GlideRecord('x_tekso_twxapp01_cmdb_updates');
		gr1.initialize();
		gr1.setValue('source_record_sys_id',current.sys_id);		
		gr1.setValue('test_table_name',tblName.toString()); // getTableName() returns an object - need to convert to String
		gr1.setValue('table_name',current.real_table_name); 
		gr1.setValue('record_originally_created_by',current.sys_created_by);
		gr1.setValue('record_originally_created_on',current.sys_created_on);	
		gr1.setValue('record_updated_by',current.sys_updated_by);
		gr1.setValue('record_updated_on',current.sys_updated_on);			
		gr1.setValue('base_table','cmdb_ci');	
		gr1.setValue('fields_changed',fieldsChanged);
		gr1.setValue('number_of_fields_changed',changeCnt);
		gr1.setValue('total_length_of_fields_changed_list',fieldsChanged.length);		
		gr1.setValue('name',current.name);		
		gr1.setValue('all_fields',allFields);
		gr1.setValue('no_of_fields',fieldCnt);
		gr1.setValue('total_length_of_all_fields_list',allFields.length);			
		gr1.setValue('test_data',true); // TESTING
		gr1.setValue('actual_table_name',tblName.toString()); // getTableName() returns an object - need to convert to String	
		gr1.setValue('inserted_by_script','BR Test uControl Track Upd cmdb_ci');		
		gr1.insert();
	}
		
	// Record that the br has run
	//var si = new x_tekso_twxapp01.UpdateConfigurationChecks();
	//si.setDTLastRunAt('br_ucontrol_track_upd_cmdb_ci_last_ran_at');
	
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-03-30 21:11:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ff0a1eb2dbfb401041d08f3813961935</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>Test uControl Track Upd cmdb_ci</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_ff0a1eb2dbfb401041d08f3813961935</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-05-06 13:28:50</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ff0a1eb2dbfb401041d08f3813961935"/>
</record_update>
