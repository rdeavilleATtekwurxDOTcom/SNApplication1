<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description>Make fields readonly on load and set colours on status fields</description>
        <field>connection_status</field>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Setup Set Fields onLoad</name>
        <order/>
        <script><![CDATA[function onLoad() {
		
	// Set fields ReadOnly
	g_form.setReadOnly('status',true);   
	g_form.setReadOnly('status_details',true);	
	g_form.setReadOnly('connection_status',true);
	g_form.setReadOnly('connection_status_details',true);
	g_form.setReadOnly('ucontrol_integration_user',true);
	g_form.setReadOnly('number_of_supported_classes',true);
	g_form.setReadOnly('system_configuration_checks',true);
	g_form.setReadOnly('cmdb_tracking',true);
	g_form.setReadOnly('cmdb_tracking_details',true);
	g_form.setReadOnly('number_of_pending_records',true);	
	g_form.setReadonly('ucontrol_mid_server.status',true);
	
	// Only show connection tested at if it is not blank
	if (g_form.getValue('connection_tested_at') == '') {
		g_form.setDisplay('connection_tested_at',false);
	}
	else {
		g_form.setDisplay('connection_tested_at',true);
		g_form.setReadOnly('connection_tested_at',true);		
	}
	
	// Only show the last data sent fields if there is some data	
	if (g_form.getValue('last_processing_at') == '') {
		g_form.setDisplay('last_processing_at',false);
		g_form.setDisplay('last_processing_data_sent_summary',false);
		g_form.setDisplay('last_processing_results_summary',false);
	}
	else {
		g_form.setDisplay('last_processing_at',true);
		g_form.setDisplay('last_processing_data_sent_summary',true);
		g_form.setDisplay('last_processing_results_summary',true);		

		g_form.setReadonly('last_processing_at',true);
		g_form.setReadonly('last_processing_data_sent_summary',true);
		g_form.setReadonly('last_processing_results_summary',true);

		g_form.setLabelOf('last_processing_at','Last Data Was Sent To uControl At');
		g_form.setLabelOf('last_processing_data_sent_summary','Last Data Sent Was');
		g_form.setLabelOf('last_processing_results_summary','Results From Last Data Sent');		
	}

	// Check we can access the MID Server 
	var mid_server = '';
	var canReadMIDServerField = true;
	// Put the mid_server in a try catch block in case the user does not have access to this
	try {
		mid_server = g_form.getDisplayBox('ucontrol_mid_server').value || '';		
	}
	catch(err) {
		//TypeError: Cannot read property 'value' of undefined
		canReadMIDServerField = false;
		mid_server = '';
	}
	
	if (canReadMIDServerField == false) {
		g_form.addErrorMessage("Cannot access the MID Server table");	
	}
	else {
		// MID Server Status should only be visible if we have a MID Server
		if (g_form.getValue('ucontrol_mid_server') == ''){
			g_form.setDisplay('ucontrol_mid_server.status',false);		
		}
		else {
			g_form.setLabelOf('ucontrol_mid_server.status','MID Server Status');	
			g_form.setDisplay('ucontrol_mid_server.status',true);
		}
	}


	if (g_form.getValue('connection_status') == 'OK') {
		g_form.setDisplay('number_of_supported_classes',true);
		g_form.setDisplay('system_configuration_checks',true);		
		g_form.setDisplay('ucontrol_integration_user',true);	
	}
	else {
		g_form.setDisplay('number_of_supported_classes',false);
		g_form.setDisplay('system_configuration_checks',false);	
		g_form.setDisplay('ucontrol_integration_user',false);			
	}


	if (g_form.getValue('cmdb_tracking') == 'Running') {
		g_form.getElement('cmdb_tracking').style.backgroundColor = "lightgreen";		
		g_form.getElement('cmdb_tracking_details').style.backgroundColor = "lightgreen";
	}
	else {
		g_form.getElement('cmdb_tracking').style.backgroundColor = "Tomato";
		g_form.getElement('cmdb_tracking_details').style.backgroundColor = "Tomato";			
	}
	
	if (g_form.getValue('system_configuration_checks') == 'Cannot find the scheduled job: Send Data to uControl') {
		g_form.getElement('system_configuration_checks').style.backgroundColor = "Tomato";	
		g_form.flash('system_configuration_checks', 'Tomato', 0);
	} 

	if (g_form.getValue('status') == 'Sending') {
		g_form.getElement('status').style.backgroundColor = "lightgreen";
		g_form.getElement('status_details').style.backgroundColor = "lightgreen";
		
		g_form.setReadOnly('ucontrol_polling_interval_minutes',true); // Could do this via ACL?
		g_form.setReadOnly('max_retries',true); // Could do this via ACL?
		
	}
	else {
		// Not Sending
		g_form.getElement('status').style.backgroundColor = "Tomato";
		g_form.getElement('status_details').style.backgroundColor = "Tomato";
	}

	if (g_form.getValue('connection_status') == 'OK') {
		g_form.getElement('connection_status').style.backgroundColor = "lightGreen";	
		g_form.getElement('connection_status_details').style.backgroundColor = "lightGreen";	
	}
	else if (g_form.getValue('connection_status') == 'Failed'){
		g_form.getElement('connection_status').style.backgroundColor = "Tomato";	
		g_form.getElement('connection_status_details').style.backgroundColor = "Tomato";
		g_form.flash('connection_status', 'Tomato', 0);
	}
	else if (g_form.getValue('connection_status') == 'Missing Connection Details'){
		g_form.getElement('connection_status').style.backgroundColor = "yellow";	
		g_form.getElement('connection_status_details').style.backgroundColor = "yellow";
	}	
	else if (g_form.getValue('connection_status') == 'Connection Requires Testing'){
		g_form.getElement('connection_status').style.backgroundColor = "coral";	
		g_form.getElement('connection_status_details').style.backgroundColor = "coral";
	}	
	else 
		{
		g_form.getElement('connection_status').style.backgroundColor = "white";	
		g_form.getElement('connection_status_details').style.backgroundColor = "white";
	}
	
	// Field messages
	if (g_form.getValue('ucontrol_url') == '') {
		g_form.showFieldMsg('ucontrol_url', 'No URL - Test Connection cannot be performed until this is provided');	
	}
	else {
		g_form.hideFieldMsg('ucontrol_url');			
	}
	
	if (canReadMIDServerField == true) {
		if (g_form.getValue('ucontrol_mid_server') == '') {			
			g_form.showFieldMsg('ucontrol_mid_server', 'No MID Server - Test Connection cannot be performed until this is provided');	
		}
		else {
			g_form.hideFieldMsg('ucontrol_mid_server');			
		}	
	}
	
	// Have to use scratchpad as this field is not on the form
	// Display BR reads the record and sets g_scratchpad.show_message_on_form_reload
	if (g_scratchpad.show_message_on_form_reload == 'x_tekso_twxapp01_start_sending_message') {
		var sysID = g_form.getUniqueValue();
		
		// Call script include function to clear show_message_on_form_reload
		var ga = new GlideAjax('x_tekso_twxapp01.ClientUpdateSetup');//this is the script include
		ga.addParam("sysparm_name", "setShowMessageOnFormReloadToBlank"); //this is the function within the script include
		ga.addParam("sysparm_sys_id", sysID);
		ga.getXML();
		
		var gdw = new GlideDialogWindow('x_tekso_twxapp01_start_sending_message');
		gdw.setPreference('sysparm_sysid',sysID);
		//gdw.setPreference('sysparm_now',gdt);	
		gdw.setTitle('<h1><strong>Start Sending To uControl</strong></h1>');
		// To hide the x in the window
		gdw.removeCloseDecoration();			
		gdw.render();	
	}

	if (g_scratchpad.show_message_on_form_reload == 'x_tekso_twxapp01_stop_sending_message') {
		var sysID2 = g_form.getUniqueValue();
		
		// Call script include function to clear show_message_on_form_reload
		var ga2 = new GlideAjax('x_tekso_twxapp01.ClientUpdateSetup');//this is the script include
		ga2.addParam("sysparm_name", "setShowMessageOnFormReloadToBlank"); //this is the function within the script include
		ga2.addParam("sysparm_sys_id", sysID2);
		ga2.getXML();
		
		var gdw2 = new GlideDialogWindow('x_tekso_twxapp01_stop_sending_message');
		gdw2.setPreference('sysparm_sysid',sysID2);
		//gdw.setPreference('sysparm_now',gdt);	
		gdw2.setTitle('<h1><strong>Stop Sending To uControl</strong></h1>');
		// To hide the x in the window
		gdw2.removeCloseDecoration();		
		gdw2.render();	
	}
	
	if (g_scratchpad.show_message_on_form_reload == 'x_tekso_twxapp01_start_tracking_message') {
		
		var sysID3 = g_form.getUniqueValue();
		// Call script include function to clear show_message_on_form_reload
		var ga3 = new GlideAjax('x_tekso_twxapp01.ClientUpdateSetup');//this is the script include
		ga3.addParam("sysparm_name", "setShowMessageOnFormReloadToBlank"); //this is the function within the script include
		ga3.addParam("sysparm_sys_id", sysID3);
		ga3.getXML();
		
		var gdw3 = new GlideDialogWindow('x_tekso_twxapp01_start_tracking_message');
		gdw3.setPreference('sysparm_sysid',sysID3);
		//gdw.setPreference('sysparm_now',gdt);	
		gdw3.setTitle('<h1><strong>Start CMDB Tracking</strong></h1>');
		// To hide the x in the window
		gdw3.removeCloseDecoration();
		gdw3.render();	
	}	
}
]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-01-29 11:03:10</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>65e58a87dbe2485035a38a7239961981</sys_id>
        <sys_mod_count>127</sys_mod_count>
        <sys_name>Setup Set Fields onLoad</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_client_65e58a87dbe2485035a38a7239961981</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-03-13 11:07:22</sys_updated_on>
        <table>x_tekso_twxapp01_setup</table>
        <type>onLoad</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
