<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_tekso_twxapp01_test_configuration_item</collection>
        <condition>current.soft_delete == true</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>XX Test Configuration Item - Delete Rels</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// This is a cacade - when the CI is deleted the Rels should be deleted
// For test data we are doing soft deletes so when the CI is soft deleted
// all the rels need to be soft deleted

// Soft Delete

(function executeRule(current, previous /*null when async*/) {
	// Has to be a before BR
	// Check a x_tekso_twxapp01_test_configuration_item record is deleted
	// Delete any x_tekso_twxapp01_test_ci_relationship records as well
	var sysID = current.sys_id.toString();
	
	var relTable = 'x_tekso_twxapp01_test_ci_relationship';
	var gr1 = new GlideRecord(relTable);
	gr1.addQuery('parent',sysID); // Where deleted CI is the parent
	gr1.query();
	while (gr1.next()) {	
		gr1.setValue('soft_delete',true);
		gr1.setValue('generate_test_data_in_progress',current.generate_test_data_in_progress);
		gr1.setValue('generate_test_data_record_sys_id',current.generate_test_data_record_sys_id);		
		//gr1.deleteRecord();
		gr1.update();
	}

	var gr2 = new GlideRecord(relTable);
	gr2.addQuery('child',sysID); // Where deleted CI is the child
	gr2.query();
	while (gr2.next()) {
		gr2.setValue('soft_delete',true);
		gr2.setValue('generate_test_data_in_progress',current.generate_test_data_in_progress);
		gr2.setValue('generate_test_data_record_sys_id',current.generate_test_data_record_sys_id);	
		//gr2.deleteRecord();
		gr2.update();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-04-02 16:20:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6a83b8bbdb7f04104f29252b13961929</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>XX Test Configuration Item - Delete Rels</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_script_6a83b8bbdb7f04104f29252b13961929</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-05-30 21:53:43</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6a83b8bbdb7f04104f29252b13961929"/>
</record_update>
