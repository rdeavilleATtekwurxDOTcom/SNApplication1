<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>save_and_build_test_data_action</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition>gs.hasRole('x_tekso_twxapp01.admin') &amp;&amp; (current.status == 'New' || current.status == 'Unsubmitted')</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>true</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Save &amp; Build Test Data</name>
        <onclick>runSaveAndBuildTestDataClientCode()</onclick>
        <order>100</order>
        <script><![CDATA[//Client-side 'onclick' function
function runSaveAndBuildTestDataClientCode() {
	g_form.clearMessages();
	var delRelQty = g_form.getValue('delete_relations_qty');
	var updRelQty = g_form.getValue('update_relations_qty');
	var delSrvQty = g_form.getValue('delete_server_qty');
	var updSrvQty = g_form.getValue('update_server_qty');
	var delApplQty = g_form.getValue('delete_application_qty');
	var updApplQty = g_form.getValue('update_application_qty');
	
	var delRelQty2 = parseInt(delRelQty.replace(',',''));
	var updRelQty2 = parseInt(updRelQty.replace(',',''));
	var delSrvQty2 = parseInt(delSrvQty.replace(',',''));
	var updSrvQty2 = parseInt(updSrvQty.replace(',',''));
	var delApplQty2 = parseInt(delApplQty.replace(',',''));
	var updApplQty2 = parseInt(updApplQty.replace(',',''));	

	if (delRelQty2 < 0) {
		g_form.addInfoMessage("Error in Delete Relations Qty. The qty cannot be negative");
		return false; //Abort submission
	}
	if (updRelQty2 < 0) {
		g_form.addInfoMessage("Error in Update Relations Qty. The qty cannot be negative");
		return false; //Abort submission
	}		
	if (delSrvQty2 < 0) {
		g_form.addInfoMessage("Error in Delete Server Qty. The qty cannot be negative");
		return false; //Abort submission
	}			
	if (updSrvQty2 < 0) {
		g_form.addInfoMessage("Error in Update Server Qty. The qty cannot be negative");
		return false; //Abort submission
	}			
	if (delApplQty2 < 0) {
		g_form.addInfoMessage("Error in Delete Application Qty. The qty cannot be negative");
		return false; //Abort submission
	}			
	if (updApplQty2 < 0) {
		g_form.addInfoMessage("Error in Update Application Qty. The qty cannot be negative");
		return false; //Abort submission
	}	

	if (delRelQty2 > 2000) {
		g_form.addInfoMessage("Error in Delete Relations Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}
	if (updRelQty2 > 2000) {
		g_form.addInfoMessage("Error in Update Relations Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}		
	if (delSrvQty2 > 2000) {
		g_form.addInfoMessage("Error in Delete Server Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}			
	if (updSrvQty2 > 2000) {
		g_form.addInfoMessage("Error in Update Server Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}			
	if (delApplQty2 > 2000) {
		g_form.addInfoMessage("Error in Delete Application Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}			
	if (updApplQty2 > 2000) {
		g_form.addInfoMessage("Error in Update Application Qty. The maximum allowed qty is 2000");
		return false; //Abort submission
	}
	

	if (delRelQty2 < 1 && updRelQty2 < 1 && delSrvQty2 < 1 && updSrvQty2 < 1 && delApplQty2 < 1 && updApplQty2 < 1) {
		g_form.addInfoMessage("At least one of the qty fields must be > 0 for submission to be performed");
		return false; //Abort submission
	}
	
	var sys_id = g_form.getUniqueValue();
	var ga = new GlideAjax('x_tekso_twxapp01.ClientTestDataPending');
	ga.addParam('sysparm_name','numberOfTestDataRecordsAlreadyPending');
	ga.addParam('sysparm_sys_id',sys_id);
	ga.getXML(numberOfTestDataRecordsAlreadyPendingCallBackFunction);	
}

//Call back function for numberOfTestDataRecordsAlreadyPending
function numberOfTestDataRecordsAlreadyPendingCallBackFunction(response) {
	// The server will always return an xml object that you will need to parse. 
	// You can start with the following to figure out what xml you have and then dig into it to pull what you need.
	var answer = response.responseXML.documentElement.getAttribute("answer");
	var answer2 = parseInt(answer);

	if (answer2 > 2000) {
		g_form.hideFieldMsg('status');
		var msg = 'Number of test records already pending: ' + answer2.toString();
		msg = msg + '. The threshold of 2000 records has been exceeded.'; 
		msg = msg + ' No more test data can be generated at this time';	
		g_form.showFieldMsg('status',msg,'error');			
	}
	else {
		//Call the UI Action and skip the 'onclick' function
		//MUST call the 'Action name' set in this UI Action		
		gsftSubmit(null, g_form.getFormElement(), 'save_and_build_test_data_action');
	}
}
	
//Server Side Code..........

//Code that runs without 'onclick'
//Ensure call to server-side function with no browser errors
if(typeof window == 'undefined')
   runSaveAndBuildTestDataBusRuleCode();

//Server-side function
function runSaveAndBuildTestDataBusRuleCode() {
	var script = 'UI Action Save & Build Test Data';
	//This message will be output if property x_tekso_twxapp01.logging.level is 2 or higher	
	new x_tekso_twxapp01.DebugLogging().message(script,2,'UI Action Save & Build Test Data - Started');
	
	if (current.delete_relations_qty > 0 || current.update_relations_qty > 0 || current.delete_server_qty > 0 || current.update_server_qty > 0 || current.delete_application_qty > 0 || current.update_application_qty > 0) {
		
		current.status = 'Test Data Build In Progress';		
		current.update();
		action.setRedirectURL(current);			
	}
	
	//This message will be output if property x_tekso_twxapp01.logging.level is 2 or higher	
	new x_tekso_twxapp01.DebugLogging().message(script,2,'UI Action Save & Build Test Data - Finished');	
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>robin</sys_created_by>
        <sys_created_on>2020-05-15 08:48:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6019e8e9db3c1c1041d08f3813961920</sys_id>
        <sys_mod_count>51</sys_mod_count>
        <sys_name>Save &amp; Build Test Data</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application 1" source="x_tekso_twxapp01">993be4b2db62085035a38a72399619a7</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Application 1">993be4b2db62085035a38a72399619a7</sys_scope>
        <sys_update_name>sys_ui_action_6019e8e9db3c1c1041d08f3813961920</sys_update_name>
        <sys_updated_by>robin</sys_updated_by>
        <sys_updated_on>2020-07-15 12:07:59</sys_updated_on>
        <table>x_tekso_twxapp01_generate_test_data</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
